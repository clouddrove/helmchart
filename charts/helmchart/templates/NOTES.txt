{{- if .Values.ingress.enabled }}
{{- range .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- end }}

{{- range $name, $service := .Values.service }}
{{- if eq $service.type "NodePort" }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}' services {{ include "helmchart.fullname" $ }})
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}')
  echo http://$NODE_IP:$NODE_PORT
{{- end }}

{{- if eq $service.type "LoadBalancer" }}
  echo "NOTE: It may take a few minutes for the LoadBalancer IP to be available."
  echo "You can watch the status by running:"
  echo "kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ include "helmchart.fullname" $ }}"
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "helmchart.fullname" $ }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ $service.port }}
{{- end }}

{{- if eq $service.type "ClusterIP" }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "helmchart.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }}" -o jsonpath='{.items[0].metadata.name}')
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ $.Release.Namespace }} $POD_NAME -o jsonpath='{.spec.containers[0].ports[0].containerPort}')
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- end }}